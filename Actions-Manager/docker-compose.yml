version: '3.0'
services:
  node:
    build: ./mediator/
    ports:
      - "8084:8084"
    volumes:
      - "./mediator/dist/index.mjs:/workdir/index.mjs"
    entrypoint:
      - node
      - "index.mjs"
    environment:
      JENKINS_TOKEN: '11889d59e14e5e05499a2f66be1b03c4ef'
      JENKINS_USER: 'admin'
      JENKINS_URL: 'http://jenkins:8080'
      SERVER_PORT: '8084'
  gerrit:
    image: "docker.io/gerritcodereview/gerrit:3.7.0"
    restart: on-failure
    volumes:
      - "git-volume:/var/gerrit/git"
      - "index-volume:/var/gerrit/index"
      - "cache-volume:/var/gerrit/cache"
    ports:
      - "29418:29418"
      - "8080:8080"
  # docker ps | grep jenkins | awk '{print $1}' | xargs -I{} docker exec -i {} cat /var/jenkins_home/secrets/initialAdminPassword
  jenkins:
    image: "docker.io/jenkins/jenkins:2.377-jdk11"
    restart: on-failure
    volumes:
      - "jenkins-home:/var/jenkins_home"
    ports:
      - "50000:50000"
      - "8082:8080"
  nexus:
    image: "docker.io/sonatype/nexus3:3.43.0"
    restart: on-failure
    ports:
      - "8081:8081"
    volumes:
      - "nexus-data:/nexus-data"

  vault:
    image: "docker.io/library/vault:1.12.1"
    cap_add:
      - IPC_LOCK
    entrypoint: /mnt/init/init.sh
    # Original command parameters are no longer relevant
    command:
      - "-dev"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "vault_development_token"
      # Accessible at http://localhost:8200/ui
      VAULT_LOCAL_CONFIG: '{"ui": true}'
      VAULT_ADDR: "http://localhost:8200"
      APPLICATION_NAME: "example"
    ports:
      - 8200:8200
    volumes:
      - "./vault/:/mnt/init"
  #mariadb:
  #  image: "docker.io/library/mariadb:10.9.4"
  #  environment:
  #    MARIADB_USER: user
  #    MARIADB_PASSWORD: secret
  #    MARIADB_ROOT_PASSWORD: secret
  #    MARIADB_DATABASE: common

volumes:
  git-volume: {}
  index-volume: {}
  cache-volume: {}
  jenkins-home: {}
  nexus-data: {}
  #keycloak:
  #  image: "docker.io/jboss/keycloak:16.1.1"
  #  restart: on-failure
  # rocketchat:
  #   image: "docker.io/library/rocket.chat:5.2.0"
  #   restart: on-failure
  #   ports:
  #     - "8083:3000"
  #   environment:
  #     # local
  #     MONGO_OPLOG_URL: mongodb://mongodb:27017/rocketchat
  # mongodb:
  #   image: "docker.io/library/mongo:6.0.2"
  #   restart: on-failure
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: secret
  # mongo-express:
  #   image: "docker.io/library/mongo-express:1.0.0-alpha.4"
  #   restart: unless-stopped
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: secret
  #     ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017
  #     # Name                            | Default         | Description
  #     # --------------------------------|-----------------|------------
  #     # ME_CONFIG_BASICAUTH_USERNAME    | ''              | mongo-express web username
  #     # ME_CONFIG_BASICAUTH_PASSWORD    | ''              | mongo-express web password
  #     # ME_CONFIG_MONGODB_ENABLE_ADMIN  | 'true'          | Enable admin access to all databases. Send strings: `"true"` or `"false"`
  #     # ME_CONFIG_MONGODB_ADMINUSERNAME | ''              | MongoDB admin username
  #     # ME_CONFIG_MONGODB_ADMINPASSWORD | ''              | MongoDB admin password
  #     # ME_CONFIG_MONGODB_PORT          | 27017           | MongoDB port
  #     # ME_CONFIG_MONGODB_SERVER        | 'mongo'         | MongoDB container name. Use comma delimited list of host names for replica sets.
  #     # ME_CONFIG_OPTIONS_EDITORTHEME   | 'default'       | mongo-express editor color theme, [more here](http://codemirror.net/demo/theme.html)
  #     # ME_CONFIG_REQUEST_SIZE          | '100kb'         | Maximum payload size. CRUD operations above this size will fail in [body-parser](https://www.npmjs.com/package/body-parser).
  #     # ME_CONFIG_SITE_BASEURL          | '/'             | Set the baseUrl to ease mounting at a subdirectory. Remember to include a leading and trailing slash.
  #     # ME_CONFIG_SITE_COOKIESECRET     | 'cookiesecret'  | String used by [cookie-parser middleware](https://www.npmjs.com/package/cookie-parser) to sign cookies.
  #     # ME_CONFIG_SITE_SESSIONSECRET    | 'sessionsecret' | String used to sign the session ID cookie by [express-session middleware](https://www.npmjs.com/package/express-session).
  #     # ME_CONFIG_SITE_SSL_ENABLED      | 'false'         | Enable SSL.
  #     # ME_CONFIG_SITE_SSL_CRT_PATH     | ''              | SSL certificate file.
  #     # ME_CONFIG_SITE_SSL_KEY_PATH     | ''              | SSL key file.
  # #postgresdb:
  # #  image: "docker.io/library/postgres:15.1"
